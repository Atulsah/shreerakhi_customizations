[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer Visit",
  "enabled": 1,
  "modified": "2025-10-18 13:50:57.178937",
  "module": "Shree",
  "name": "Custom Customer Visit",
  "script": "frappe.ui.form.on('Customer Visit', {\r\n\r\n    // ----------------------\r\n    // Form Load\r\n    // ----------------------\r\n    onload: function(frm) {\r\n        // Fetch states from Address DocType (client-side)\r\n        frappe.db.get_doc('DocType', 'Address').then(address_doctype => {\r\n            let state_field = address_doctype.fields.find(f => f.fieldname === 'state');\r\n            if (state_field && state_field.options) {\r\n                let states = state_field.options.split('\\n');\r\n                frm.set_df_property('state', 'options', states.join('\\n'));\r\n            }\r\n        });\r\n    },\r\n\r\n    // ----------------------\r\n    // Form Refresh\r\n    // ----------------------\r\n    refresh: function(frm) {\r\n        toggle_buttons(frm);\r\n        calculate_days_before(frm);\r\n    },\r\n\r\n    // ----------------------\r\n    // Field Change Events\r\n    // ----------------------\r\n    visit_date: function(frm) {\r\n        calculate_days_before(frm);\r\n    },\r\n\r\n    d_day: function(frm) {\r\n        calculate_days_before(frm);\r\n    },\r\n\r\n    customer_type: function(frm) {\r\n        toggle_buttons(frm);\r\n    },\r\n\r\n    customer: async function(frm) {\r\n        if (!frm.doc.customer) {\r\n            frm.set_value('customer_details', '');\r\n            frm.fields_dict.address_html.$wrapper.html('');\r\n            return;\r\n        }\r\n\r\n        // Fetch customer doc including primary address\r\n        let customer_doc = await frappe.db.get_doc('Customer', frm.doc.customer);\r\n\r\n        let address_html = '';\r\n        let details_html = '';\r\n\r\n        if (customer_doc.customer_primary_address) {\r\n            // Fetch the primary address doc\r\n            let addr = await frappe.db.get_doc('Address', customer_doc.customer_primary_address);\r\n\r\n            let full_address = `\r\n                ${addr.address_line1 || ''}<br>\r\n                ${addr.address_line2 || ''}<br>\r\n                ${addr.city || ''}, ${addr.state || ''} - ${addr.pincode || ''}<br>\r\n            `;\r\n\r\n            address_html = `\r\n                <div style=\"line-height:1.5; font-size:13px;\">\r\n                    <b>Address:</b><br>${full_address}\r\n                    <b>Contact:</b> ${addr.phone || ''}<br>\r\n                    <b>GSTIN:</b> ${addr.gstin || ''}<br>\r\n                </div>\r\n            `;\r\n\r\n            details_html = `\r\n                <b>Name:</b> ${customer_doc.customer_name}<br>\r\n                <b>Address:</b> ${addr.address_line1 || ''}, ${addr.city || ''}<br>\r\n                <b>Contact:</b> ${addr.phone || ''}<br>\r\n                <b>GSTIN:</b> ${addr.gstin || ''}<br>\r\n            `;\r\n        } else {\r\n            details_html = `<b>Name:</b> ${customer_doc.customer_name}<br><span style=\"color:gray;\">No primary address found</span>`;\r\n            address_html = `<span style=\"color:gray;\">No primary address linked</span>`;\r\n        }\r\n\r\n        frm.set_value('customer_details', details_html);\r\n        frm.refresh_field('customer_details');\r\n        frm.fields_dict.address_html.$wrapper.html(address_html);\r\n    },\r\n\r\n    edit_customer_button: function(frm) {\r\n        if (frm.doc.customer) {\r\n            frappe.set_route('Form', 'Customer', frm.doc.customer);\r\n        } else {\r\n            frappe.msgprint('Please select a customer first');\r\n        }\r\n    },\r\n\r\n    create_new_customer_button: function(frm) {\r\n        frappe.new_doc('Customer');\r\n    }\r\n\r\n});\r\n\r\n// ----------------------\r\n// Helper Functions\r\n// ----------------------\r\nfunction calculate_days_before(frm) {\r\n    if(frm.doc.visit_date && frm.doc.d_day) {\r\n        frm.set_value('days_before_d_day', frappe.datetime.get_diff(frm.doc.d_day, frm.doc.visit_date));\r\n    } else {\r\n        frm.set_value('days_before_d_day', null);\r\n    }\r\n}\r\n\r\nfunction toggle_buttons(frm) {\r\n    if (frm.doc.customer_type === 'Old Customer') {\r\n        frm.set_df_property('customer', 'reqd', 1);\r\n        frm.set_df_property('edit_customer_button', 'hidden', 0);\r\n        frm.set_df_property('create_new_customer_button', 'hidden', 1);\r\n    } else if (frm.doc.customer_type === 'New Customer') {\r\n        frm.set_df_property('customer', 'reqd', 0);\r\n        frm.set_df_property('edit_customer_button', 'hidden', 1);\r\n        frm.set_df_property('create_new_customer_button', 'hidden', 0);\r\n        frm.set_value('customer', '');\r\n        frm.set_value('customer_details', '');\r\n        frm.fields_dict.address_html.$wrapper.html('');\r\n    }\r\n}\r\n\r\n\r\n// ----------------------\r\n// Filter Customer by State/City (Working Version)\r\n// ----------------------\r\nfunction set_customer_query(frm) {\r\n    frm.set_query('customer', async function() {\r\n        let filters = [];\r\n        if (frm.doc.state) filters.push(['state', '=', frm.doc.state]);\r\n        if (frm.doc.city) filters.push(['city', '=', frm.doc.city]);\r\n\r\n        if (filters.length === 0) return {}; // no filter if both empty\r\n\r\n        // Fetch addresses first\r\n        let addresses = await frappe.db.get_list('Address', {\r\n            fields: ['name'],\r\n            filters: filters\r\n        });\r\n\r\n        let address_names = addresses.map(a => a.name);\r\n\r\n        return {\r\n            filters: {\r\n                customer_primary_address: ['in', address_names]\r\n            }\r\n        };\r\n    });\r\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2025-09-02 18:33:02.787957",
  "module": "Shree",
  "name": "Custom Stock Entry",
  "script": "frappe.ui.form.on('Stock Entry', {\r\n    refresh: function(frm) {\r\n        frm.doc.items.forEach(row => {\r\n            let workstation = frm.doc.custom_factory__location || \"\";\r\n            let bill_no = frm.doc.custom_bill_no || \"\";\r\n            let combined_value = workstation && bill_no\r\n                ? (workstation + \"-\" + bill_no)\r\n                : (workstation || bill_no);\r\n\r\n            frappe.model.set_value(row.doctype, row.name, 'custom_factory_bill_no', combined_value);\r\n        });\r\n    }\r\n});\r\n\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2025-10-25 15:31:27.742282",
  "module": "Shree",
  "name": "Custom Sales Invoice",
  "script": "frappe.ui.form.on(\"Sales Invoice\", {\r\n    refresh: function(frm) {\r\n        frm.fields_dict['custom_bos_transporter'].get_query = function(doc) {\r\n            return {\r\n                filters: {\r\n                    is_transporter: 1\r\n                }\r\n            };\r\n        };\r\n    }\r\n});\r\n\r\nfrappe.ui.form.on('Sales Invoice Item', {\r\n    item_code: function(frm, cdt, cdn) {\r\n        check_duplicate_item(frm, cdt, cdn);\r\n    },\r\n    items_add: function(frm, cdt, cdn) {\r\n        check_duplicate_item(frm, cdt, cdn);\r\n    }\r\n});\r\n\r\n// ---------- Helper Function ----------\r\nfunction check_duplicate_item(frm, cdt, cdn) {\r\n    let row = locals[cdt][cdn];\r\n    if (!row.item_code) return;\r\n\r\n    // Find all items with the same item_code\r\n    let duplicates = [];\r\n    frm.doc.items.forEach((item, index) => {\r\n        if (item.item_code === row.item_code && item.name) {\r\n            duplicates.push({\r\n                item_code: item.item_code,\r\n                row: index + 1,\r\n                name: item.name\r\n            });\r\n        }\r\n    });\r\n\r\n    // Check if there are duplicates (more than 1 occurrence)\r\n    if (duplicates.length > 1) {\r\n        // Find the first occurrence row number\r\n        let first_row = duplicates[0].row;\r\n        \r\n        frappe.msgprint({\r\n            title: __(\"Duplicate Item Found\"),\r\n            message: __(\"Item <b>{0}</b> has already been added earlier at Row {1}.\", [row.item_code, first_row]),\r\n            indicator: \"red\"\r\n        });\r\n\r\n        // Remove the duplicate row\r\n        frappe.model.clear_doc(cdt, cdn);\r\n        frm.refresh_field('items');\r\n    }\r\n}\r\n\r\n// ===== No of Carton - Add/Update ===== //\r\n\r\nfrappe.ui.form.on('Sales Invoice', {\r\n    refresh: function(frm) {\r\n        update_carton_count(frm);\r\n    },\r\n    \r\n    items_add: function(frm, cdt, cdn) {\r\n        update_carton_count(frm);\r\n    },\r\n    \r\n    items_remove: function(frm, cdt, cdn) {\r\n        update_carton_count(frm);\r\n    }\r\n});\r\n\r\nfrappe.ui.form.on('Sales Invoice Item', {\r\n    qty: function(frm, cdt, cdn) {\r\n        update_carton_count(frm);\r\n    },\r\n    \r\n    item_code: function(frm, cdt, cdn) {\r\n        update_carton_count(frm);\r\n    }\r\n});\r\n\r\nfunction update_carton_count(frm) {\r\n    let carton_qty = 0;\r\n    \r\n    // Loop through all items in the invoice\r\n    if (frm.doc.items) {\r\n        frm.doc.items.forEach(function(item) {\r\n            // Check if the item name contains \"Packing & Forwarding Charges\"\r\n            // This will match items like \"Packing & Forwarding Charges - Export\", etc.\r\n            if ((item.item_name && item.item_name.includes(\"Packing & Forwarding Charges\")) || \r\n                (item.item_code && item.item_code.includes(\"Packing & Forwarding Charges\"))) {\r\n                carton_qty = item.qty || 0;\r\n            }\r\n        });\r\n    }\r\n    \r\n    // Set the value to custom field\r\n    frm.set_value('custom_number_of_carton', carton_qty);\r\n}\r\n\r\n//======= WHATSAPP MESSAGE SECTION =========//\r\n\r\nfrappe.ui.form.on(\"Sales Invoice\", {\r\n    refresh(frm) {\r\n        // Only show button for submitted invoices with a key\r\n        if (frm.doc.docstatus === 1 && frm.doc.custom_public_access_key) {\r\n            frm.add_custom_button(__(\"Send via WhatsApp\"), async function() {\r\n                try {\r\n                    // ✅ Fetch Customer Phone Number\r\n                    let mobile = \"\";\r\n                    \r\n                    // Try to get phone from customer address\r\n                    if (frm.doc.customer_address) {\r\n                        const address_resp = await frappe.call({\r\n                            method: \"frappe.client.get\",\r\n                            args: {\r\n                                doctype: \"Address\",\r\n                                name: frm.doc.customer_address\r\n                            }\r\n                        });\r\n\r\n                        if (address_resp && address_resp.message) {\r\n                            let addr = address_resp.message;\r\n                            mobile = addr.phone || addr.mobile_no || \"\";\r\n                        }\r\n                    }\r\n\r\n                    // If not found in address, try customer mobile\r\n                    if (!mobile && frm.doc.contact_mobile) {\r\n                        mobile = frm.doc.contact_mobile;\r\n                    }\r\n\r\n                    if (!mobile) {\r\n                        frappe.msgprint({\r\n                            title: __(\"Phone Number Missing\"),\r\n                            message: __(\"Customer phone number not found. Please add it in Customer Address.\"),\r\n                            indicator: \"red\"\r\n                        });\r\n                        return;\r\n                    }\r\n\r\n                    // ✅ Clean and add country code\r\n                    mobile = mobile.replace(/\\D/g, \"\"); // Remove non-digits\r\n                    if (!mobile.startsWith(\"91\")) {\r\n                        mobile = \"91\" + mobile;\r\n                    }\r\n\r\n                    // ✅ Build secure link\r\n                    const secure_link = `${window.location.origin}/api/method/shreerakhi_customizations.api.public.get_invoice?key=${frm.doc.custom_public_access_key}`;\r\n\r\n                    // ✅ Compose WhatsApp message\r\n                    const amount = frm.doc.rounded_total || frm.doc.grand_total;\r\n                    const msg = `नमस्ते ${frm.doc.customer_name},\r\n\r\nआपका Invoice *${frm.doc.name}* तैयार है।\r\n💰 राशि: ₹${amount}\r\n\r\n📎 Invoice देखें/Download करें:\r\n${secure_link}\r\n\r\n🙏 धन्यवाद!`;\r\n\r\n                    // ✅ Show dialog with options\r\n                    const d = new frappe.ui.Dialog({\r\n                        title: __('Send Invoice via WhatsApp'),\r\n                        fields: [\r\n                            {\r\n                                fieldtype: 'HTML',\r\n                                options: `\r\n                                    <div style=\"margin-bottom: 15px;\">\r\n                                        <strong>Customer:</strong> ${frm.doc.customer_name}<br>\r\n                                        <strong>Mobile:</strong> +${mobile}<br>\r\n                                        <strong>Invoice:</strong> ${frm.doc.name}<br>\r\n                                        <strong>Amount:</strong> ₹${amount}\r\n                                    </div>\r\n                                    <div style=\"background: #f5f5f5; padding: 10px; border-radius: 5px; margin-bottom: 15px;\">\r\n                                        <pre style=\"white-space: pre-wrap; font-family: inherit; margin: 0;\">${msg}</pre>\r\n                                    </div>\r\n                                `\r\n                            }\r\n                        ],\r\n                        primary_action_label: __('Open WhatsApp'),\r\n                        primary_action: function() {\r\n                            // Detect if mobile device\r\n                            const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n                            \r\n                            // Use different URL based on device\r\n                            let whatsapp_url;\r\n                            if (isMobile) {\r\n                                // Mobile: use wa.me (opens WhatsApp app directly)\r\n                                whatsapp_url = `https://wa.me/${mobile}?text=${encodeURIComponent(msg)}`;\r\n                            } else {\r\n                                // Desktop: use api.whatsapp.com (opens WhatsApp Web)\r\n                                whatsapp_url = `https://api.whatsapp.com/send?phone=${mobile}&text=${encodeURIComponent(msg)}`;\r\n                            }\r\n                            \r\n                            window.open(whatsapp_url, \"_blank\");\r\n                            d.hide();\r\n                            \r\n                            frappe.show_alert({\r\n                                message: __(\"WhatsApp opened! Message is pre-filled.\"),\r\n                                indicator: \"green\"\r\n                            }, 5);\r\n                        },\r\n                        secondary_action_label: __('Copy Message'),\r\n                        secondary_action: function() {\r\n                            // Copy to clipboard\r\n                            navigator.clipboard.writeText(msg).then(function() {\r\n                                frappe.show_alert({\r\n                                    message: __(\"Message copied! Now open WhatsApp manually.\"),\r\n                                    indicator: \"blue\"\r\n                                }, 5);\r\n                            }).catch(function(err) {\r\n                                frappe.msgprint(__(\"Could not copy message. Please copy manually.\"));\r\n                            });\r\n                        }\r\n                    });\r\n                    \r\n                    d.show();\r\n\r\n                } catch (error) {\r\n                    console.error(\"WhatsApp Error:\", error);\r\n                    frappe.msgprint({\r\n                        title: __(\"Error\"),\r\n                        message: __(\"Error while preparing WhatsApp message. Please check console.\"),\r\n                        indicator: \"red\"\r\n                    });\r\n                }\r\n            }, __(\"Actions\"));\r\n        }\r\n    }\r\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2025-10-22 16:44:58.835016",
  "module": "Shree",
  "name": "Custom Sales Order",
  "script": "frappe.ui.form.on('Sales Order', {\r\n    delivery_date: function(frm) {\r\n        if(frm.doc.delivery_date) {\r\n            frm.doc.items.forEach(function(item) {\r\n                item.delivery_date = frm.doc.delivery_date;\r\n            });\r\n            frm.refresh_field('items');\r\n        }\r\n    }\r\n});\r\n",
  "view": "Form"
 }
]